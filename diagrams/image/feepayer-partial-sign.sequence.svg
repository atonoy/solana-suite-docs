<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" id="svgTag" contentstyletype="text/css" height="681px" preserveAspectRatio="none" style="width: 1305px; height: 681px; background: rgb(255, 255, 255); --primary-color:#cccccc; --secondary-color:#ffffff; --tertiary-color:#fbf9eb; --quaternary-color:#cccccc; --text-color:#333333; --line-color:#009ddc; --label-border-color:#cccccc; --label-background-color:#ffffff; --label-text-color:#009ddc; --box-back-color:#f5f5f5; --box-stroke-color:#f5f5f5; --font-stack:Roboto; --participant-stroke-width:2; --border-thickness:1; --font-size:14;" version="1.1" viewBox="0 0 1305 681" width="1305px" zoomAndPan="magnify"><defs><style>

    svg g ellipse,
    svg g circle,
    svg g rect {
      stroke: var(--primary-color);
      stroke-width: var(--participant-stroke-width);
      /* fill: url(#image); */
      fill: var(--secondary-color);
      stroke-dasharray: 7500;
      animation: draw 5s linear;
    }

    svg g path {
      fill: var(--tertiary-color);
      stroke: var(--quaternary-color);
      stroke-width: 1.5;
      stroke-dasharray: 7500;
      animation: draw 5s linear;
    }

    svg g polygon {
      fill: var(--line-color);
      stroke-dasharray: 7500;
      animation: draw 5s linear;
    }

    svg g line,
    svg g polyline {
      stroke: var(--line-color);
      stroke-width: var(--border-thickness);
      stroke-dasharray: 7500;
      animation: draw 5s linear;
    }

    svg g text {
      fill: var(--text-color);
      font-family: var(--font-stack), "Tahoma";
      font-size: 14;
    }

    svg g line.dashed {
      stroke-dasharray: 5, 5;
      animation: dash 1s infinite;
    }

    svg g line.dotted {
      stroke-dasharray: 2, 2;
      animation: dash 1s infinite;
    }

    svg g line.skipped {
      stroke-dasharray: 1, 4;
      animation: dash 1s infinite;
    }

    svg g line.labelDivider {
      stroke-width: 2px;
    }

    svg g .label {
      stroke: var(--label-border-color);
      fill: var(--label-background-color);
    }
    svg g .labelText {
      fill: var(--label-text-color);
    }

    svg g path.actor {
      stroke: var(--primary-color);
      stroke-width: 2;
    }

    svg g path.note {
      stroke: var(--quaternary-color);
      fill: var(--tertiary-color);
      stroke-width: 1;
      font-size: 12;
    }
    svg g polygon.note {
      stroke: var(--quaternary-color);
      fill: var(--tertiary-color);
      stroke-width: 1;
      font-size: 12;
    }

    svg g .transparent {
      fill: none;
    }

    svg g path.database {
      fill: var(--secondary-color);
      stroke: var(--primary-color);
      stroke-width: 1.5px;
    }

    svg g path.squiggly {
      fill: none !important;
      stroke: var(--line-color) !important;
    }

    svg g rect.box {
      fill: var(--box-back-color);
      stroke: var(--box-stroke-color);
    }
    svg g rect.titleBox {
      fill: none;
      stroke: white;
      stroke-width: 5;

    }
    svg g line.divider {
      stroke: var(--primary-color);
      stroke-width: 3.5;
    }
    svg g line.altDivider {
      stroke: var(--primary-color);
      stroke-dasharray: 2, 2;
    }


    svg g path.alt {
      fill: var(--primary-color);
      stroke: var(--primary-color);
    }

    svg g path.actorClass {
      fill: var(--primary-color);
      stroke: var(--primary-color);
    }

    </style>
    </defs><g><rect height="50.5938" rx="10" ry="10" width="370" x="463.75" y="30.6406"></rect><text font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="347" x="472.75" y="52.6357">This is a flow to perform a secure transfer</text><text font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="347" x="477.75" y="68.9326">without sending the feepayer's private key</text><rect height="47.6992" width="10" x="395.5" y="277.4961"></rect><rect height="161.2305" width="10" x="713.5" y="413.0273"></rect><line x1="63" x2="63" y1="171.5313" y2="592.2578"></line><line x1="400.5" x2="400.5" y1="171.5313" y2="592.2578"></line><line x1="718" x2="718" y1="171.5313" y2="592.2578"></line><svg x="38.5" y="100.7344" width="45px" height="45px" viewBox="0 -1 45 45" version="1.1"><g id="surface1"><path class="actorClass" name="participantshape" d="M 38.410156 29.089844 C 35.960938 26.640625 33.042969 24.824219 29.859375 23.726562 C 33.269531 21.378906 35.507812 17.449219 35.507812 13.007812 C 35.507812 5.835938 29.671875 0 22.5 0 C 15.328125 0 9.492188 5.835938 9.492188 13.007812 C 9.492188 17.449219 11.730469 21.378906 15.140625 23.726562 C 11.957031 24.824219 9.039062 26.640625 6.589844 29.089844 C 2.339844 33.339844 0 38.988281 0 45 L 3.515625 45 C 3.515625 34.53125 12.03125 26.015625 22.5 26.015625 C 32.96875 26.015625 41.484375 34.53125 41.484375 45 L 45 45 C 45 38.988281 42.660156 33.339844 38.410156 29.089844 Z M 22.5 22.5 C 17.265625 22.5 13.007812 18.242188 13.007812 13.007812 C 13.007812 7.773438 17.265625 3.515625 22.5 3.515625 C 27.734375 3.515625 31.992188 7.773438 31.992188 13.007812 C 31.992188 18.242188 27.734375 22.5 22.5 22.5 Z M 22.5 22.5 "></path></g></svg><text font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="79" x="21" y="164.2295">Client/User</text><svg x="38.5" y="619.0547" width="45px" height="45px" viewBox="0 -1 45 45" version="1.1"><g id="surface1"><path class="actorClass" name="participantshape" d="M 38.410156 29.089844 C 35.960938 26.640625 33.042969 24.824219 29.859375 23.726562 C 33.269531 21.378906 35.507812 17.449219 35.507812 13.007812 C 35.507812 5.835938 29.671875 0 22.5 0 C 15.328125 0 9.492188 5.835938 9.492188 13.007812 C 9.492188 17.449219 11.730469 21.378906 15.140625 23.726562 C 11.957031 24.824219 9.039062 26.640625 6.589844 29.089844 C 2.339844 33.339844 0 38.988281 0 45 L 3.515625 45 C 3.515625 34.53125 12.03125 26.015625 22.5 26.015625 C 32.96875 26.015625 41.484375 34.53125 41.484375 45 L 45 45 C 45 38.988281 42.660156 33.339844 38.410156 29.089844 Z M 22.5 22.5 C 17.265625 22.5 13.007812 18.242188 13.007812 13.007812 C 13.007812 7.773438 17.265625 3.515625 22.5 3.515625 C 27.734375 3.515625 31.992188 7.773438 31.992188 13.007812 C 31.992188 18.242188 27.734375 22.5 22.5 22.5 Z M 22.5 22.5 "></path></g></svg><text font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="79" x="21" y="608.2529">Client/User</text><text font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="88" x="354.5" y="156.2295">Solana Suite</text><text font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="88" x="354.5" y="619.2529">Solana Suite</text><rect height="38.2969" rx="2.5" ry="2.5" width="69" x="684" y="132.2344"></rect><text font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="47" x="695" y="156.2295">Server</text><rect height="38.2969" rx="2.5" ry="2.5" width="69" x="684" y="591.2578"></rect><text font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="47" x="695" y="615.2529">Server</text><rect height="47.6992" width="10" x="395.5" y="277.4961"></rect><rect height="161.2305" width="10" x="713.5" y="413.0273"></rect><polygon points="15,186.5313,113,186.5313,123,209.5313,113,232.5313,15,232.5313,5,209.5313,15,186.5313" class="note"></polygon><text font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="86" x="21" y="206.5981">Action before</text><text font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="80" x="25" y="221.731">SOL transfer</text><polygon points="383.5,273.4961,393.5,277.4961,383.5,281.4961,387.5,277.4961"></polygon><line x1="63.5" x2="389.5" y1="277.4961" y2="277.4961"></line><circle r="12" cx="79.3" cy="262.4302" name="label" class="label"></circle><text font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="9" x="74.5" y="267.4302" class="labelText">1</text><text font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="280" x="95.5" y="268.4302">Call SolNative.feePayerPartialSignTransfer()</text><path d="M410,242.7969 L410,290.7969 L644,290.7969 L644,252.7969 L634,242.7969 L410,242.7969 "></path><path d="M634,242.7969 L634,252.7969 L644,252.7969 L634,242.7969 "></path><text font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="201" x="420" y="263.8638">Create Hex data in a tranaction</text><text font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="191" x="420" y="278.9966">signed only by the Client/User</text><polygon points="74.5,321.1953,64.5,325.1953,74.5,329.1953,70.5,325.1953"></polygon><line x1="68.5" x2="399.5" y1="325.1953" y2="325.1953"></line><circle r="12" cx="89.3" cy="310.1294" name="label" class="label"></circle><text font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="9" x="84.5" y="315.1294" class="labelText">2</text><text font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="279" x="105.5" y="316.1294">Hex data(signed transaction by Client/User)</text><polygon points="701.5,409.0273,711.5,413.0273,701.5,417.0273,705.5,413.0273"></polygon><line x1="63.5" x2="707.5" y1="413.0273" y2="413.0273"></line><circle r="12" cx="79.3" cy="397.9614" name="label" class="label"></circle><text font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="8" x="74.5" y="402.9614" class="labelText">3</text><text font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="169" x="94.5" y="403.9614">Send http reqest Hex data</text><path d="M728,363.1953 L728,441.1953 L1233,441.1953 L1233,373.1953 L1223,363.1953 L728,363.1953 "></path><path d="M1223,363.1953 L1223,373.1953 L1233,373.1953 L1223,363.1953 "></path><text font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="389" x="738" y="384.2622">Send Hex data to server in some way. In the traditional way,</text><text font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="148" x="738" y="399.395">http reqest would send</text><text font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="92" x="890" y="399.395">"post method"</text><text font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="228" x="986" y="399.395">since the Hex data size is not fixed.</text><text font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="4" x="738" y="414.5278">&nbsp;</text><text font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="298" x="738" y="429.6606">[Recommended] Hex data itself be encrypted.</text><polygon points="411.5,514.9922,401.5,518.9922,411.5,522.9922,407.5,518.9922"></polygon><line x1="405.5" x2="712.5" y1="518.9922" y2="518.9922"></line><circle r="12" cx="426.3" cy="503.9263" name="label" class="label"></circle><text font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="9" x="421.5" y="508.9263" class="labelText">4</text><text font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="260" x="442.5" y="509.9263">Call new PartialSignInstruction().submit()</text><path d="M728,476.7266 L728,539.7266 L1293,539.7266 L1293,486.7266 L1283,476.7266 L728,476.7266 "></path><path d="M1283,476.7266 L1283,486.7266 L1293,486.7266 L1283,476.7266 "></path><text font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="495" x="738" y="497.7935">Sign the hex data received from Clinet/User with the private key of feePayer.</text><text font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="214" x="738" y="512.9263">Unlike the normal transfer action,</text><text font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="144" x="956" y="512.9263">"PartialSignInstruction"</text><text font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="170" x="1104" y="512.9263">object must be generated.</text><text font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="376" x="738" y="528.0591">After that, execute the submit() function in the same way.</text><polygon points="706.5,570.2578,716.5,574.2578,706.5,578.2578,710.5,574.2578"></polygon><line x1="400.5" x2="712.5" y1="574.2578" y2="574.2578"></line><circle r="12" cx="416.3" cy="559.1919" name="label" class="label"></circle><text font-family="sans-serif" font-size="13" font-weight="bold" lengthAdjust="spacing" textLength="9" x="411.5" y="564.1919" class="labelText">5</text><text font-family="sans-serif" font-size="13" lengthAdjust="spacing" textLength="180" x="432.5" y="565.1919">Result of sbumit(): Ok or Err</text><rect height="19.6406" rx="10" ry="10" width="184" x="1113.5" y="5"></rect><text font-family="sans-serif" font-size="10" lengthAdjust="spacing" textLength="176" x="1117.5" y="18.2822">Fee payer partial signed transfer</text><!--MD5=[7c2406f8fa6c085840705c56565c9b87]
@startuml
autonumber 1


header: Fee payer partial signed transfer
title: This is a flow to perform a secure transfer \n without sending the feepayer's private key

autonumber

actor "Client/User" as client
collections "Solana Suite" as sdk
hnote over client : Action before\n SOL transfer

client -> sdk :  Call SolNative.feePayerPartialSignTransfer()
note right
  Create Hex data in a tranaction 
  signed only by the Client/User
end note
activate sdk
client <- sdk : Hex data(signed transaction by Client/User) 

deactivate sdk
|||

client -> Server : Send http reqest Hex data

note right
  Send Hex data to server in some way. In the traditional way, 
  http reqest would send <font color=red>"post method"</font> since the Hex data size is not fixed.

  [Recommended] Hex data itself be encrypted.
end note
activate Server
|||
sdk <- Server : Call new PartialSignInstruction().submit()

note right
  Sign the hex data received from Clinet/User with the private key of feePayer.
  Unlike the normal transfer action, <font color=red>"PartialSignInstruction"</font> object must be generated.
  After that, execute the submit() function in the same way.
end note

sdk -> Server : Result of sbumit(): Ok or Err
deactivate Server


 
skinparam Shadowing false 
skinparam notefontsize 12  
skinparam ParticipantPadding  0 
skinparam ParticipantFontSize 16 
skinparam ActorFontSize 16 
skinparam ArrowFontSize 16 
skinparam SequenceDividerFontSize 14 
skinparam BoxPadding 15 
skinparam SequenceTitleFontSize 17 
skinparam titleBorderThickness 2
skinparam   Padding  4 
 skinparam roundcorner 20
@enduml

PlantUML version 1.2022.5(Sat Apr 30 10:55:52 UTC 2022)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>